name: Deploy Backend to GCE

on:
  push:
    branches:
      - main
    paths:
      - backend/**
      - .github/workflows/deploy-backend.yml

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GCE_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.GCE_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        run: |
          ssh ${{ secrets.GCE_USER }}@${{ secrets.GCE_HOST }} << 'EOF'
            cd ~/backend

            # Ensure Python venv tools are available
            sudo apt update
            sudo apt install -y python3.11 python3.11-venv

            # Setup venv
            python3.11 -m venv venv
            ./venv/bin/pip install --upgrade pip
            ./venv/bin/pip install -r requirements.txt

            # Write .env file
            cat <<EOT > .env
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          URL=${{ secrets.URL }}
          CORS_ORIGINS=${{ secrets.CORS_ORIGINS }}
          RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }}
          RAZORPAY_KEY_SECRET=${{ secrets.RAZORPAY_KEY_SECRET }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          FERMION_API_KEY=${{ secrets.FERMION_API_KEY }}
          BREVO_API_KEY=${{ secrets.BREVO_API_KEY }}
          MAIL_SENDER_NAME=${{ secrets.MAIL_SENDER_NAME }}
          MAIL_SENDER_EMAIL=${{ secrets.MAIL_SENDER_EMAIL }}
          OTP_EXPIRY_DURATION_SECONDS=${{ secrets.OTP_EXPIRY_DURATION_SECONDS }}
          GOOGLE_APPLICATION_CREDENTIALS=gcs_service_key.json
          GCS_BUCKET_NAME=${{ secrets.GCS_BUCKET_NAME }}
          FRONTEND_URL=${{ secrets.FRONTEND_URL }}
          EOT

            # Upload GCS service key securely if not already on server
            echo "${{ secrets.GCS_SERVICE_KEY_JSON }}" > gcs_service_key.json

            # Run DB migration
            ./venv/bin/alembic upgrade head

            # Restart app
            sudo systemctl restart gunicorn.service
          EOF
